// Generated from grammar/FateCode.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class FateCodeLexer extends Lexer {
	public static readonly THEN = 1;
	public static readonly END = 2;
	public static readonly RETURN = 3;
	public static readonly REMEMBERING = 4;
	public static readonly VISIT = 5;
	public static readonly NO = 6;
	public static readonly WHEN = 7;
	public static readonly NUMERIC = 8;
	public static readonly LINKED = 9;
	public static readonly LINK = 10;
	public static readonly PATH = 11;
	public static readonly UNLINK = 12;
	public static readonly FROM = 13;
	public static readonly EQUAL = 14;
	public static readonly TO = 15;
	public static readonly JUMP = 16;
	public static readonly UPDATE = 17;
	public static readonly TRACK = 18;
	public static readonly ADD = 19;
	public static readonly SUBTRACT = 20;
	public static readonly START = 21;
	public static readonly AT = 22;
	public static readonly DECIDE = 23;
	public static readonly BETWEEN = 24;
	public static readonly CHOOSE = 25;
	public static readonly DQ = 26;
	public static readonly PLUS = 27;
	public static readonly MINUS = 28;
	public static readonly DOT = 29;
	public static readonly GT = 30;
	public static readonly LT = 31;
	public static readonly EQ = 32;
	public static readonly NUMBER = 33;
	public static readonly HEXNUMBER = 34;
	public static readonly FLOAT = 35;
	public static readonly LineComment = 36;
	public static readonly LABEL = 37;
	public static readonly STRING = 38;
	public static readonly IDENTIFIER = 39;
	public static readonly WS = 40;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"THEN", "END", "RETURN", "REMEMBERING", "VISIT", "NO", "WHEN", "NUMERIC", 
		"LINKED", "LINK", "PATH", "UNLINK", "FROM", "EQUAL", "TO", "JUMP", "UPDATE", 
		"TRACK", "ADD", "SUBTRACT", "START", "AT", "DECIDE", "BETWEEN", "CHOOSE", 
		"DQ", "PLUS", "MINUS", "DOT", "GT", "LT", "EQ", "NUMBER", "HEXDIGIT", 
		"HEXNUMBER", "FLOAT", "LineComment", "ALPHA", "ALPHAS", "ALNUM", "LABEL", 
		"STRING", "NonDigit", "IdentifierNonDigit", "Digit", "IDENTIFIER", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'THEN'", "'END'", "'RETURN'", "'REMEMBERING'", "'VISIT'", 
		"'NO'", "'WHEN'", "'NUMERIC'", "'LINKED'", "'LINK'", "'PATH'", "'UNLINK'", 
		"'FROM'", "'EQUAL'", "'TO'", "'JUMP'", "'UPDATE'", "'TRACK'", "'ADD'", 
		"'SUBTRACT'", "'START'", "'AT'", "'DECIDE'", "'BETWEEN'", "'CHOOSE'", 
		"'\"'", "'+'", "'-'", "'.'", "'>'", "'<'", "'=='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "THEN", "END", "RETURN", "REMEMBERING", "VISIT", "NO", "WHEN", 
		"NUMERIC", "LINKED", "LINK", "PATH", "UNLINK", "FROM", "EQUAL", "TO", 
		"JUMP", "UPDATE", "TRACK", "ADD", "SUBTRACT", "START", "AT", "DECIDE", 
		"BETWEEN", "CHOOSE", "DQ", "PLUS", "MINUS", "DOT", "GT", "LT", "EQ", "NUMBER", 
		"HEXNUMBER", "FLOAT", "LineComment", "LABEL", "STRING", "IDENTIFIER", 
		"WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(FateCodeLexer._LITERAL_NAMES, FateCodeLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return FateCodeLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(FateCodeLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "FateCode.g4"; }

	// @Override
	public get ruleNames(): string[] { return FateCodeLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return FateCodeLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return FateCodeLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return FateCodeLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02*\u0154\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b" +
		"\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F" +
		"\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15" +
		"\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19" +
		"\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D" +
		"\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03!\x03\"\x06\"" +
		"\u0108\n\"\r\"\x0E\"\u0109\x03#\x03#\x05#\u010E\n#\x03$\x03$\x03$\x03" +
		"$\x06$\u0114\n$\r$\x0E$\u0115\x03%\x03%\x03%\x03%\x03&\x03&\x03&\x03&" +
		"\x07&\u0120\n&\f&\x0E&\u0123\v&\x03\'\x03\'\x03(\x06(\u0128\n(\r(\x0E" +
		"(\u0129\x03)\x03)\x06)\u012E\n)\r)\x0E)\u012F\x03*\x03*\x03*\x03+\x03" +
		"+\x03+\x03+\x07+\u0139\n+\f+\x0E+\u013C\v+\x03+\x03+\x03,\x03,\x03-\x03" +
		"-\x03.\x03.\x03/\x03/\x03/\x07/\u0149\n/\f/\x0E/\u014C\v/\x030\x060\u014F" +
		"\n0\r0\x0E0\u0150\x030\x030\x03\u013A\x02\x021\x03\x02\x03\x05\x02\x04" +
		"\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v" +
		"\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!" +
		"\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x19" +
		"1\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02" +
		"\"C\x02#E\x02\x02G\x02$I\x02%K\x02&M\x02\x02O\x02\x02Q\x02\x02S\x02\'" +
		"U\x02(W\x02\x02Y\x02\x02[\x02\x02]\x02)_\x02*\x03\x02\b\x04\x02CHch\x04" +
		"\x02\f\f\x0F\x0F\x04\x02C\\c|\x05\x02C\\aac|\x03\x022;\x05\x02\v\f\x0F" +
		"\x0F\"\"\x02\u0158\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02" +
		"\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r" +
		"\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13" +
		"\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19" +
		"\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F" +
		"\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02" +
		"\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02" +
		"\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03" +
		"\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02" +
		"\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02" +
		"A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02" +
		"\x02\x02\x02K\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02" +
		"\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x03a\x03\x02\x02\x02\x05f\x03" +
		"\x02\x02\x02\x07j\x03\x02\x02\x02\tq\x03\x02\x02\x02\v}\x03\x02\x02\x02" +
		"\r\x83\x03\x02\x02\x02\x0F\x86\x03\x02\x02\x02\x11\x8B\x03\x02\x02\x02" +
		"\x13\x93\x03\x02\x02\x02\x15\x9A\x03\x02\x02\x02\x17\x9F\x03\x02\x02\x02" +
		"\x19\xA4\x03\x02\x02\x02\x1B\xAB\x03\x02\x02\x02\x1D\xB0\x03\x02\x02\x02" +
		"\x1F\xB6\x03\x02\x02\x02!\xB9\x03\x02\x02\x02#\xBE\x03\x02\x02\x02%\xC5" +
		"\x03\x02\x02\x02\'\xCB\x03\x02\x02\x02)\xCF\x03\x02\x02\x02+\xD8\x03\x02" +
		"\x02\x02-\xDE\x03\x02\x02\x02/\xE1\x03\x02\x02\x021\xE8\x03\x02\x02\x02" +
		"3\xF0\x03\x02\x02\x025\xF7\x03\x02\x02\x027\xF9\x03\x02\x02\x029\xFB\x03" +
		"\x02\x02\x02;\xFD\x03\x02\x02\x02=\xFF\x03\x02\x02\x02?\u0101\x03\x02" +
		"\x02\x02A\u0103\x03\x02\x02\x02C\u0107\x03\x02\x02\x02E\u010D\x03\x02" +
		"\x02\x02G\u010F\x03\x02\x02\x02I\u0117\x03\x02\x02\x02K\u011B\x03\x02" +
		"\x02\x02M\u0124\x03\x02\x02\x02O\u0127\x03\x02\x02\x02Q\u012D\x03\x02" +
		"\x02\x02S\u0131\x03\x02\x02\x02U\u0134\x03\x02\x02\x02W\u013F\x03\x02" +
		"\x02\x02Y\u0141\x03\x02\x02\x02[\u0143\x03\x02\x02\x02]\u0145\x03\x02" +
		"\x02\x02_\u014E\x03\x02\x02\x02ab\x07V\x02\x02bc\x07J\x02\x02cd\x07G\x02" +
		"\x02de\x07P\x02\x02e\x04\x03\x02\x02\x02fg\x07G\x02\x02gh\x07P\x02\x02" +
		"hi\x07F\x02\x02i\x06\x03\x02\x02\x02jk\x07T\x02\x02kl\x07G\x02\x02lm\x07" +
		"V\x02\x02mn\x07W\x02\x02no\x07T\x02\x02op\x07P\x02\x02p\b\x03\x02\x02" +
		"\x02qr\x07T\x02\x02rs\x07G\x02\x02st\x07O\x02\x02tu\x07G\x02\x02uv\x07" +
		"O\x02\x02vw\x07D\x02\x02wx\x07G\x02\x02xy\x07T\x02\x02yz\x07K\x02\x02" +
		"z{\x07P\x02\x02{|\x07I\x02\x02|\n\x03\x02\x02\x02}~\x07X\x02\x02~\x7F" +
		"\x07K\x02\x02\x7F\x80\x07U\x02\x02\x80\x81\x07K\x02\x02\x81\x82\x07V\x02" +
		"\x02\x82\f\x03\x02\x02\x02\x83\x84\x07P\x02\x02\x84\x85\x07Q\x02\x02\x85" +
		"\x0E\x03\x02\x02\x02\x86\x87\x07Y\x02\x02\x87\x88\x07J\x02\x02\x88\x89" +
		"\x07G\x02\x02\x89\x8A\x07P\x02\x02\x8A\x10\x03\x02\x02\x02\x8B\x8C\x07" +
		"P\x02\x02\x8C\x8D\x07W\x02\x02\x8D\x8E\x07O\x02\x02\x8E\x8F\x07G\x02\x02" +
		"\x8F\x90\x07T\x02\x02\x90\x91\x07K\x02\x02\x91\x92\x07E\x02\x02\x92\x12" +
		"\x03\x02\x02\x02\x93\x94\x07N\x02\x02\x94\x95\x07K\x02\x02\x95\x96\x07" +
		"P\x02\x02\x96\x97\x07M\x02\x02\x97\x98\x07G\x02\x02\x98\x99\x07F\x02\x02" +
		"\x99\x14\x03\x02\x02\x02\x9A\x9B\x07N\x02\x02\x9B\x9C\x07K\x02\x02\x9C" +
		"\x9D\x07P\x02\x02\x9D\x9E\x07M\x02\x02\x9E\x16\x03\x02\x02\x02\x9F\xA0" +
		"\x07R\x02\x02\xA0\xA1\x07C\x02\x02\xA1\xA2\x07V\x02\x02\xA2\xA3\x07J\x02" +
		"\x02\xA3\x18\x03\x02\x02\x02\xA4\xA5\x07W\x02\x02\xA5\xA6\x07P\x02\x02" +
		"\xA6\xA7\x07N\x02\x02\xA7\xA8\x07K\x02\x02\xA8\xA9\x07P\x02\x02\xA9\xAA" +
		"\x07M\x02\x02\xAA\x1A\x03\x02\x02\x02\xAB\xAC\x07H\x02\x02\xAC\xAD\x07" +
		"T\x02\x02\xAD\xAE\x07Q\x02\x02\xAE\xAF\x07O\x02\x02\xAF\x1C\x03\x02\x02" +
		"\x02\xB0\xB1\x07G\x02\x02\xB1\xB2\x07S\x02\x02\xB2\xB3\x07W\x02\x02\xB3" +
		"\xB4\x07C\x02\x02\xB4\xB5\x07N\x02\x02\xB5\x1E\x03\x02\x02\x02\xB6\xB7" +
		"\x07V\x02\x02\xB7\xB8\x07Q\x02\x02\xB8 \x03\x02\x02\x02\xB9\xBA\x07L\x02" +
		"\x02\xBA\xBB\x07W\x02\x02\xBB\xBC\x07O\x02\x02\xBC\xBD\x07R\x02\x02\xBD" +
		"\"\x03\x02\x02\x02\xBE\xBF\x07W\x02\x02\xBF\xC0\x07R\x02\x02\xC0\xC1\x07" +
		"F\x02\x02\xC1\xC2\x07C\x02\x02\xC2\xC3\x07V\x02\x02\xC3\xC4\x07G\x02\x02" +
		"\xC4$\x03\x02\x02\x02\xC5\xC6\x07V\x02\x02\xC6\xC7\x07T\x02\x02\xC7\xC8" +
		"\x07C\x02\x02\xC8\xC9\x07E\x02\x02\xC9\xCA\x07M\x02\x02\xCA&\x03\x02\x02" +
		"\x02\xCB\xCC\x07C\x02\x02\xCC\xCD\x07F\x02\x02\xCD\xCE\x07F\x02\x02\xCE" +
		"(\x03\x02\x02\x02\xCF\xD0\x07U\x02\x02\xD0\xD1\x07W\x02\x02\xD1\xD2\x07" +
		"D\x02\x02\xD2\xD3\x07V\x02\x02\xD3\xD4\x07T\x02\x02\xD4\xD5\x07C\x02\x02" +
		"\xD5\xD6\x07E\x02\x02\xD6\xD7\x07V\x02\x02\xD7*\x03\x02\x02\x02\xD8\xD9" +
		"\x07U\x02\x02\xD9\xDA\x07V\x02\x02\xDA\xDB\x07C\x02\x02\xDB\xDC\x07T\x02" +
		"\x02\xDC\xDD\x07V\x02\x02\xDD,\x03\x02\x02\x02\xDE\xDF\x07C\x02\x02\xDF" +
		"\xE0\x07V\x02\x02\xE0.\x03\x02\x02\x02\xE1\xE2\x07F\x02\x02\xE2\xE3\x07" +
		"G\x02\x02\xE3\xE4\x07E\x02\x02\xE4\xE5\x07K\x02\x02\xE5\xE6\x07F\x02\x02" +
		"\xE6\xE7\x07G\x02\x02\xE70\x03\x02\x02\x02\xE8\xE9\x07D\x02\x02\xE9\xEA" +
		"\x07G\x02\x02\xEA\xEB\x07V\x02\x02\xEB\xEC\x07Y\x02\x02\xEC\xED\x07G\x02" +
		"\x02\xED\xEE\x07G\x02\x02\xEE\xEF\x07P\x02\x02\xEF2\x03\x02\x02\x02\xF0" +
		"\xF1\x07E\x02\x02\xF1\xF2\x07J\x02\x02\xF2\xF3\x07Q\x02\x02\xF3\xF4\x07" +
		"Q\x02\x02\xF4\xF5\x07U\x02\x02\xF5\xF6\x07G\x02\x02\xF64\x03\x02\x02\x02" +
		"\xF7\xF8\x07$\x02\x02\xF86\x03\x02\x02\x02\xF9\xFA\x07-\x02\x02\xFA8\x03" +
		"\x02\x02\x02\xFB\xFC\x07/\x02\x02\xFC:\x03\x02\x02\x02\xFD\xFE\x070\x02" +
		"\x02\xFE<\x03\x02\x02\x02\xFF\u0100\x07@\x02\x02\u0100>\x03\x02\x02\x02" +
		"\u0101\u0102\x07>\x02\x02\u0102@\x03\x02\x02\x02\u0103\u0104\x07?\x02" +
		"\x02\u0104\u0105\x07?\x02\x02\u0105B\x03\x02\x02\x02\u0106\u0108\x05[" +
		".\x02\u0107\u0106\x03\x02\x02\x02\u0108\u0109\x03\x02\x02\x02\u0109\u0107" +
		"\x03\x02\x02\x02\u0109\u010A\x03\x02\x02\x02\u010AD\x03\x02\x02\x02\u010B" +
		"\u010E\x05[.\x02\u010C\u010E\t\x02\x02\x02\u010D\u010B\x03\x02\x02\x02" +
		"\u010D\u010C\x03\x02\x02\x02\u010EF\x03\x02\x02\x02\u010F\u0110\x072\x02" +
		"\x02\u0110\u0111\x07z\x02\x02\u0111\u0113\x03\x02\x02\x02\u0112\u0114" +
		"\x05E#\x02\u0113\u0112\x03\x02\x02\x02\u0114\u0115\x03\x02\x02\x02\u0115" +
		"\u0113\x03\x02\x02\x02\u0115\u0116\x03\x02\x02\x02\u0116H\x03\x02\x02" +
		"\x02\u0117\u0118\x05C\"\x02\u0118\u0119\x05;\x1E\x02\u0119\u011A\x05C" +
		"\"\x02\u011AJ\x03\x02\x02\x02\u011B\u011C\x071\x02\x02\u011C\u011D\x07" +
		"1\x02\x02\u011D\u0121\x03\x02\x02\x02\u011E\u0120\n\x03\x02\x02\u011F" +
		"\u011E\x03\x02\x02\x02\u0120\u0123\x03\x02\x02\x02\u0121\u011F\x03\x02" +
		"\x02\x02\u0121\u0122\x03\x02\x02\x02\u0122L\x03\x02\x02\x02\u0123\u0121" +
		"\x03\x02\x02\x02\u0124\u0125\t\x04\x02\x02\u0125N\x03\x02\x02\x02\u0126" +
		"\u0128\x05M\'\x02\u0127\u0126\x03\x02\x02\x02\u0128\u0129\x03\x02\x02" +
		"\x02\u0129\u0127\x03\x02\x02\x02\u0129\u012A\x03\x02\x02\x02\u012AP\x03" +
		"\x02\x02\x02\u012B\u012E\x05M\'\x02\u012C\u012E\x05C\"\x02\u012D\u012B" +
		"\x03\x02\x02\x02\u012D\u012C\x03\x02\x02\x02\u012E\u012F\x03\x02\x02\x02" +
		"\u012F\u012D\x03\x02\x02\x02\u012F\u0130\x03\x02\x02\x02\u0130R\x03\x02" +
		"\x02\x02\u0131\u0132\x07%\x02\x02\u0132\u0133\x05]/\x02\u0133T\x03\x02" +
		"\x02\x02\u0134\u013A\x07$\x02\x02\u0135\u0136\x07$\x02\x02\u0136\u0139" +
		"\x07$\x02\x02\u0137\u0139\v\x02\x02\x02\u0138\u0135\x03\x02\x02\x02\u0138" +
		"\u0137\x03\x02\x02\x02\u0139\u013C\x03\x02\x02\x02\u013A\u013B\x03\x02" +
		"\x02\x02\u013A\u0138\x03\x02\x02\x02\u013B\u013D\x03\x02\x02\x02\u013C" +
		"\u013A\x03\x02\x02\x02\u013D\u013E\x07$\x02\x02\u013EV\x03\x02\x02\x02" +
		"\u013F\u0140\t\x05\x02\x02\u0140X\x03\x02\x02\x02\u0141\u0142\x05W,\x02" +
		"\u0142Z\x03\x02\x02\x02\u0143\u0144\t\x06\x02\x02\u0144\\\x03\x02\x02" +
		"\x02\u0145\u014A\x05Y-\x02\u0146\u0149\x05Y-\x02\u0147\u0149\x05[.\x02" +
		"\u0148\u0146\x03\x02\x02\x02\u0148\u0147\x03\x02\x02\x02\u0149\u014C\x03" +
		"\x02\x02\x02\u014A\u0148\x03\x02\x02\x02\u014A\u014B\x03\x02\x02\x02\u014B" +
		"^\x03\x02\x02\x02\u014C\u014A\x03\x02\x02\x02\u014D\u014F\t\x07\x02\x02" +
		"\u014E\u014D\x03\x02\x02\x02\u014F\u0150\x03\x02\x02\x02\u0150\u014E\x03" +
		"\x02\x02\x02\u0150\u0151\x03\x02\x02\x02\u0151\u0152\x03\x02\x02\x02\u0152" +
		"\u0153\b0\x02\x02\u0153`\x03\x02\x02\x02\x0F\x02\u0109\u010D\u0115\u0121" +
		"\u0129\u012D\u012F\u0138\u013A\u0148\u014A\u0150\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!FateCodeLexer.__ATN) {
			FateCodeLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(FateCodeLexer._serializedATN));
		}

		return FateCodeLexer.__ATN;
	}

}

